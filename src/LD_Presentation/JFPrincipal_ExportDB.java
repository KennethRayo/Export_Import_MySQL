/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package LD_Presentation;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author KGR
 */
public class JFPrincipal_ExportDB extends javax.swing.JFrame {

    /**
     * Creates new form JFPrincipal_ExportDB
     */
    public JFPrincipal_ExportDB() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton_ExportDB = new javax.swing.JButton();
        jButton_ImportDB = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton_ExportDB.setText("Export");
        jButton_ExportDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ExportDBActionPerformed(evt);
            }
        });

        jButton_ImportDB.setText("Import");
        jButton_ImportDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ImportDBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(163, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton_ImportDB, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_ExportDB, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(134, 134, 134))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jButton_ImportDB, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 123, Short.MAX_VALUE)
                .addComponent(jButton_ExportDB, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_ExportDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ExportDBActionPerformed
        try {
            // TODO add your handling code here:
            //KGRSystems@localhost
            Process p = Runtime.getRuntime().exec("C:\\Program Files (x86)\\MariaDB 10.3\\bin\\mysqldump -u KGRSystems -p08093005 aac");
            
            InputStream is = p.getInputStream();
            
            FileOutputStream fos = new FileOutputStream("backup_aac.sql");
            
            byte[] buffer = new byte[1000];
            
            int leido = is.read(buffer);
            
            while(leido > 0)
            {
                //0 iniciar donde quedo en el paso anterior 1 desde el principio
                fos.write(buffer, 0, leido);
                leido = is.read(buffer);
            }
            fos.close();
            
        } catch (IOException ex) {
            Logger.getLogger(JFPrincipal_ExportDB.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println(ex.getMessage());
        }
        
    }//GEN-LAST:event_jButton_ExportDBActionPerformed

    private void jButton_ImportDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ImportDBActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            //Process p = Runtime.getRuntime().exec("C:\\Program Files\\MariaDB 10.3\\bin\\mysql -u KGRSystems -p08093005 aac");
            Process p = Runtime.getRuntime().exec("C:\\Program Files (x86)\\MariaDB 10.3\\bin\\mysql -u KGRSystems -p08093005");
            
            FileInputStream fis;
            try (OutputStream os = p.getOutputStream()) {
                fis = new FileInputStream("restore.sql");
                byte[] buffer = new byte[1000];
                int leido = fis.read(buffer);
                while(leido > 0)
                {
                    //0 iniciar donde quedo en el paso anterior 1 desde el principio
                    os.write(buffer, 0, leido);
                    leido = fis.read(buffer);
                }   os.flush();//  vaciar buffer de salida
            }
            fis.close();
            
        } catch (IOException ex) {
            Logger.getLogger(JFPrincipal_ExportDB.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton_ImportDBActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFPrincipal_ExportDB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFPrincipal_ExportDB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFPrincipal_ExportDB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFPrincipal_ExportDB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFPrincipal_ExportDB().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_ExportDB;
    private javax.swing.JButton jButton_ImportDB;
    // End of variables declaration//GEN-END:variables
}
